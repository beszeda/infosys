{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GepServiceService = /*#__PURE__*/(() => {\n  class GepServiceService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getGepek() {\n      return this.http.get('/api/gepek', {\n        responseType: 'json'\n      }).pipe(catchError(this.ErrorHandler));\n    }\n\n    ErrorHandler(error) {\n      if (error.status === 0) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong.\n        console.error(`Backend returned code ${error.status}, body was: `, error.error);\n      } // Return an observable with a user-facing error message.\n\n\n      return throwError(() => new Error('Something bad happened; please try again later.'));\n    }\n\n  }\n\n  GepServiceService.ɵfac = function GepServiceService_Factory(t) {\n    return new (t || GepServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  GepServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GepServiceService,\n    factory: GepServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return GepServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}