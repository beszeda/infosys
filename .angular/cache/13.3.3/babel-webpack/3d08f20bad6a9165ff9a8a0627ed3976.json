{"ast":null,"code":"/*import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, first, Observable, throwError } from 'rxjs';\r\nimport { Munkas } from '../models/Munkas';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MunkaServiceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getMunkas(): Observable<Munkas[]>{\r\n    return this.http.get<Munkas[]>('/api/munkas', {responseType: 'json'}).pipe(\r\n      catchError(this.ErrorHandler)\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  private ErrorHandler(error: HttpErrorResponse): Observable<never> {\r\n    if (error.status === 0) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong.\r\n      console.error(\r\n        `Backend returned code ${error.status}, body was: `, error.error);\r\n    }\r\n    // Return an observable with a user-facing error message.\r\n    return throwError(() => new Error('Something bad happened; please try again later.'));\r\n  }\r\n} */","map":null,"metadata":{},"sourceType":"script"}