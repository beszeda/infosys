{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/gep-service.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction GepComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction GepComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"label\", 1);\n    i0.ɵɵtext(3, \"id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 2);\n    i0.ɵɵelementStart(5, \"label\", 3);\n    i0.ɵɵtext(6, \"tipus:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 4);\n    i0.ɵɵelementStart(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function GepComponent_div_3_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.addGep();\n    });\n    i0.ɵɵtext(9, \"\\\" gep hozz\\u00E1ad\\u00E1sa\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function GepComponent_div_3_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const gep_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.delGep(gep_r3.id);\n    });\n    i0.ɵɵtext(11, \"\\\" gep t\\u00F6rl\\u00E9se \");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nexport let GepComponent = /*#__PURE__*/(() => {\n  class GepComponent {\n    constructor(gepService) {\n      this.gepService = gepService;\n    }\n\n    ngOnInit() {\n      this.gepek$ = this.fetchAll();\n    }\n\n    fetchAll() {\n      console.log(\"asd\");\n      return this.gepService.getGepek();\n    }\n\n    addGep() {\n      console.log(\"asd\");\n      return this.gepService.addGepek();\n    }\n\n    delGep(id) {\n      console.log(\"asd\");\n      this.gepService.delGepek(id);\n    }\n\n    getId() {\n      console.log(\"grne\");\n      return this.getId();\n    }\n\n  }\n\n  GepComponent.ɵfac = function GepComponent_Factory(t) {\n    return new (t || GepComponent)(i0.ɵɵdirectiveInject(i1.GepServiceService));\n  };\n\n  GepComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GepComponent,\n    selectors: [[\"app-gep\"]],\n    decls: 5,\n    vars: 6,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"for\", \"id\"], [\"type\", \"text\", \"id\", \"id\", \"id\", \"id\"], [\"for\", \"tipus\"], [\"type\", \"text\", \"tipus\", \"tipus\", \"tipus\", \"tipus\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function GepComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GepComponent_div_0_Template, 1, 0, \"div\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelement(2, \"div\");\n        i0.ɵɵtemplate(3, GepComponent_div_3_Template, 12, 0, \"div\", 0);\n        i0.ɵɵpipe(4, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 2, ctx.gepek$));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 4, ctx.gepek$));\n      }\n    },\n    directives: [i2.NgForOf],\n    pipes: [i2.AsyncPipe],\n    styles: [\"\"]\n  });\n  return GepComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}