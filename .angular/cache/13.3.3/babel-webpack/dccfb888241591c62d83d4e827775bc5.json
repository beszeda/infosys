{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/gep-service.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction GepComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function GepComponent_div_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const gep_r1 = restoredCtx.$implicit;\n      return gep_r1.id;\n    });\n    i0.ɵɵtext(2, \"\\\" gepek listazasa \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function GepComponent_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.fetchAll();\n    });\n    i0.ɵɵtext(4, \"\\\" gepek t\\u00F6rl\\u00E9se \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function GepComponent_div_1_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.fetchAll();\n    });\n    i0.ɵɵtext(6, \"\\\" gepek hozz\\u00E1ad\\u00E1sa \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let GepComponent = /*#__PURE__*/(() => {\n  class GepComponent {\n    constructor(gepService) {\n      this.gepService = gepService;\n    }\n\n    ngOnInit() {\n      this.gepek$ = this.fetchAll();\n    }\n\n    fetchAll() {\n      console.log(\"asd\");\n      return this.gepService.getGepek();\n    }\n\n    getId() {\n      console.log(\"grne\");\n      return this.getId();\n    }\n\n  }\n\n  GepComponent.ɵfac = function GepComponent_Factory(t) {\n    return new (t || GepComponent)(i0.ɵɵdirectiveInject(i1.GepServiceService));\n  };\n\n  GepComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GepComponent,\n    selectors: [[\"app-gep\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"for\", \"id\"], [\"type\", \"text\", \"id\", \"id\", \"id\", \"id\"], [\"for\", \"tipus\"], [\"type\", \"text\", \"tipus\", \"tipus\", \"tipus\", \"tipus\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function GepComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"\\n> \");\n        i0.ɵɵtemplate(1, GepComponent_div_1_Template, 7, 0, \"div\", 0);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"id:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"tipus:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.gepek$));\n      }\n    },\n    directives: [i2.NgForOf],\n    pipes: [i2.AsyncPipe],\n    styles: [\"\"]\n  });\n  return GepComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}