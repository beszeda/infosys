{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, first, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MunkasServiceService = /*#__PURE__*/(() => {\n  class MunkasServiceService {\n    constructor(http) {\n      this.http = http;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\"\n        })\n      };\n    }\n\n    getMunkas() {\n      return this.http.get('/api/munkas', {\n        responseType: 'json'\n      }).pipe(catchError(this.ErrorHandler));\n    }\n\n    delMunkas(id) {\n      return this.http.delete('/api/munkas/' + id, this.httpOptions).pipe(catchError(this.ErrorHandler));\n    }\n\n    addMunkas(formData) {\n      return this.http.post('/api/munkas/', {\n        id: formData.id,\n        firstname: formData.firstName,\n        lastname: formData.lastName,\n        oraber: formData.oraber,\n        szakepzetseg: formData.szakkepzetseg,\n        statusz: formData.statusz\n      }, this.httpOptions).pipe(first(), catchError(this.ErrorHandler));\n    }\n\n    ErrorHandler(error) {\n      if (error.status === 0) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong.\n        console.error(`Backend returned code ${error.status}, body was: `, error.error);\n      } // Return an observable with a user-facing error message.\n\n\n      return throwError(() => new Error('Something bad happened; please try again later.'));\n    }\n\n  }\n\n  MunkasServiceService.ɵfac = function MunkasServiceService_Factory(t) {\n    return new (t || MunkasServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MunkasServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MunkasServiceService,\n    factory: MunkasServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return MunkasServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}